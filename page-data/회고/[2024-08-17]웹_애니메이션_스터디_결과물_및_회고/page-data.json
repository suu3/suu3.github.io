{"componentChunkName":"component---src-templates-blog-post-js","path":"/회고/[2024-08-17]웹_애니메이션_스터디_결과물_및_회고/","result":{"data":{"site":{"siteMetadata":{"title":"Suu.Blog"}},"markdownRemark":{"id":"8025daa4-76c9-5519-962e-eb5e198f16a6","excerpt":"개요 지난 6월부터 7월까지 두달 간 잇츠 스터디크루…","html":"<h2 id=\"개요\" style=\"position:relative;\"><a href=\"#%EA%B0%9C%EC%9A%94\" aria-label=\"개요 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>개요</h2>\n<p>지난 6월부터 7월까지 두달 간 <strong>잇츠 스터디크루 2기</strong>로 진행된 <strong>‘애니메이션으로 화려한 웹 만들기’</strong> 스터디에 참여했었다.</p>\n<p>평소 <strong>크리에이티브 디벨로퍼</strong> 분야와 <strong>인터랙션 개발</strong>에 관심이 많았지만, 회사에서 직접 구현할 기회는 거의 없었다. 특히 랜딩 페이지나 이벤트 페이지와 같은 경우가 아니면 과도한 애니메이션은 오히려 사용자 경험에 부정적일 수 있다는 점을 최근에 느끼면서 욕심을 덜어내기도 했다.</p>\n<p>인터렉션에 대한 관심은 강의를 틈틈이 듣거나 간단히 실습해보는 정도에 그치고 있었다.</p>\n<p>그러던 중 잇츠 스터디 크루 스터디 목록에서 너무나 하고 싶었던 이 주제가 눈에 띄어 바로 신청했고 다행히 스터디원으로 선정될 수 있었다.</p>\n<p>스터디를 통해 배운 점과 결과물들을 남기고자 한다. 스터디는 초반에는 <strong>2D 애니메이션</strong>을, 후반에는 <strong>3D 애니메이션</strong>을 중심으로 진행되었다.</p>\n<h3 id=\"1주차-framer-motion을-사용한-스크롤-애니메이션\" style=\"position:relative;\"><a href=\"#1%EC%A3%BC%EC%B0%A8-framer-motion%EC%9D%84-%EC%82%AC%EC%9A%A9%ED%95%9C-%EC%8A%A4%ED%81%AC%EB%A1%A4-%EC%95%A0%EB%8B%88%EB%A9%94%EC%9D%B4%EC%85%98\" aria-label=\"1주차 framer motion을 사용한 스크롤 애니메이션 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1주차: framer-motion을 사용한 <strong>스크롤 애니메이션</strong></h3>\n<p>1주차는 디자인 에이전시 사이트의 스크롤 인터랙션을 참고해 framer-motion을 활용하여 <em>클릭 시 트리거 되는 애니메이션과 스크롤에 따라 트리거되는 애니메이션</em>을 구현했다.</p>\n<p>이전에 <code class=\"language-text\">interseptor observer</code>와 <code class=\"language-text\">css keyframes</code> 의 조합으로 스크롤 애니메이션을 구현해본 적은 있었지만, <code class=\"language-text\">framer-motion</code>으로 처음 구현해보니 더 간단히 구현할 수 있었다. 또한 스크롤의 진행 정도와 애니메이션 진행정도를 매핑하거나 순차적 애니메이션을 줄 때 <code class=\"language-text\">framer-motion</code>을 사용하면 쉽게 구현할 수 있다는 것을 알게 되었다.</p>\n<ul>\n<li><strong>구현 및 학습 내용</strong>\n<ol>\n<li><strong>기본 트랜지션 작성</strong>\n<ul>\n<li><code class=\"language-text\">motion</code> 엘리먼트를 이용한 간단한 트랜지션 작성 방법을 익혔다.</li>\n</ul>\n</li>\n<li><strong>스크롤 기반 애니메이션</strong>\n<ul>\n<li><code class=\"language-text\">useScroll</code> 훅으로 스크롤 위치를 가져와 애니메이션 트리거로 사용했다.</li>\n<li><code class=\"language-text\">useTransform</code> + <code class=\"language-text\">useScroll</code> 조합으로 특정 스크롤 위치 범위를 특정 범위 값으로 변환해 애니메이션에 활용할 수 있었다.</li>\n</ul>\n</li>\n<li><strong>이벤트 기반 상태 변화</strong>\n<ul>\n<li><code class=\"language-text\">useMotionValueEvent</code>: 스크롤 이벤트와 같이 특정 이벤트 트리거 시 값을 감지하여 상태 변화를 일으키는 방식으로 활용했다.</li>\n</ul>\n</li>\n<li><strong>자식 요소 간의 시간차 애니메이션</strong>\n<ul>\n<li>순차적으로 발동하는 애니메이션 구현 시 <code class=\"language-text\">staggerChildren</code>을 사용하면 쉽게 구현할 수 있었다.</li>\n</ul>\n</li>\n</ol>\n</li>\n</ul>\n<h3 id=\"2주차-framer-motion-라우트-전환-애니메이션\" style=\"position:relative;\"><a href=\"#2%EC%A3%BC%EC%B0%A8-framer-motion-%EB%9D%BC%EC%9A%B0%ED%8A%B8-%EC%A0%84%ED%99%98-%EC%95%A0%EB%8B%88%EB%A9%94%EC%9D%B4%EC%85%98\" aria-label=\"2주차 framer motion 라우트 전환 애니메이션 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2주차: framer-motion <strong>라우트 전환 애니메이션</strong></h3>\n<p>2주차엔 똑같이 framer-motion을 사용하여 여러 레퍼런스들을 참고하여 <em>라우트 전환 애니메이션</em>을 구현하였다.</p>\n<p><img src=\"/%ED%9A%8C%EA%B3%A0/%5B2024-08-17%5D%EC%9B%B9_%EC%95%A0%EB%8B%88%EB%A9%94%EC%9D%B4%EC%85%98_%EC%8A%A4%ED%84%B0%EB%94%94_%EA%B2%B0%EA%B3%BC%EB%AC%BC_%EB%B0%8F_%ED%9A%8C%EA%B3%A0/1.gif\" alt=\"1.gif\"></p>\n<ul>\n<li><strong>구현 및 학습 내용</strong>\n<ol>\n<li><code class=\"language-text\">AnimationPresense</code>을 사용해 컴포넌트 언마운트/마운트 시 애니메이션을 제어했다.</li>\n<li><strong>라우트 전환 커튼 애니메이션</strong>\n<ol>\n<li>현재 라우트가 언마운트 될 때와 다음 라우트가 마운트 될 때 각각 애니메이션이 트리거 되도록 설정했다.</li>\n</ol>\n</li>\n<li><strong>Clip-Path 애니메이션</strong>\n<ol>\n<li>독특한 애니메이션을 써보고 싶어서 서치하다가 <code class=\"language-text\">clip-path</code>를 사용한 애니메이션을 보고 라우트 애니메이션에 적용해보았다.</li>\n<li>clip-path generator를 검색하면 원하는 도형의 clip-path 코드를 쉽게 딸 수 있었었다.</li>\n</ol>\n</li>\n</ol>\n</li>\n</ul>\n<h3 id=\"3주차-r3f를-사용한-스크롤-애니메이션\" style=\"position:relative;\"><a href=\"#3%EC%A3%BC%EC%B0%A8-r3f%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%9C-%EC%8A%A4%ED%81%AC%EB%A1%A4-%EC%95%A0%EB%8B%88%EB%A9%94%EC%9D%B4%EC%85%98\" aria-label=\"3주차 r3f를 사용한 스크롤 애니메이션 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3주차: R3F를 사용한 스크롤 애니메이션</h3>\n<p>3주차부터는 3D 애니메이션을 다루기 시작했다. 3주차에는 <em>R3F를 사용해 스크롤 애니메이션</em>을 구현했다.</p>\n<p>3d를 하면서부터는 에셋이 필요했기 때문에 무료 에셋 사이트들을 찾게 됐는데(나중에 여유가 있다면 모델링까지 직접 만들고 싶다.),\n<a href=\"https://sketchfab.com/\"><strong>sketchfab</strong></a>와 <a href=\"https://poly.pizza/\"><strong>poly.pizza</strong></a>를 알게 되었다.</p>\n<p>스케치팹은 유료가 대부분이지만 필터링 설정으로 무료 에셋을 찾을 수 있다. (몇 없긴 하다..)</p>\n<p>요즘은 유튜브에 인터렉션 관련 영상과 오픈소스가 많아져서 참고할 수 있는 코드가 많아 좋은 것 같다. 유튜브에서 여러 코드를 참고하며 구현했다.</p>\n<p><img src=\"/%ED%9A%8C%EA%B3%A0/%5B2024-08-17%5D%EC%9B%B9_%EC%95%A0%EB%8B%88%EB%A9%94%EC%9D%B4%EC%85%98_%EC%8A%A4%ED%84%B0%EB%94%94_%EA%B2%B0%EA%B3%BC%EB%AC%BC_%EB%B0%8F_%ED%9A%8C%EA%B3%A0/2.gif\" alt=\"2.gif\"></p>\n<ul>\n<li><strong>구현 및 학습 내용</strong>\n<ol>\n<li><strong>마우스 애니메이션</strong>\n<ol>\n<li><code class=\"language-text\">useFrame</code>사용해 매 프레임마다 마우스 포인터 위치를 가져와 오브젝트를 회전시켰다.</li>\n<li>마우스 위치에 따라 카메라 위치를 바꿔서 꿀렁거리는 느낌을 주고 싶었는데, three 라이브러리<code class=\"language-text\">MathUtils.lerp</code> ****함수를 사용했다. 이때 처음 알았는데 선형보간법이 3d에서 자연스러운 움직임을 구현하는데 많이 쓰이는 것 같았다.</li>\n</ol>\n</li>\n<li><strong>텍스트 애니메이션</strong>\n<ol>\n<li><code class=\"language-text\">drei</code>에서 제공해주는 3d 텍스트 컴포넌트를 사용했다.</li>\n<li><code class=\"language-text\">framer-motion-3d</code>를 사용해 <code class=\"language-text\">motion.group</code>으로 텍스트를 감싸고, 스크롤 이벤트를 트리거로 설정해 구현했다.</li>\n</ol>\n</li>\n<li><strong>스크롤 애니메이션</strong>\n<ol>\n<li>스크롤 애니메이션은 gsap의 ScrollTrigger Timeline으로 구현하면 더 쉽겠지만, 패키지를 더 설치하고 싶지 않아서 <code class=\"language-text\">useFrame</code>으로 현재 섹션 번호를 계산해 모델의 위치를 동적으로 변경하는 방식으로 구현했다.</li>\n</ol>\n</li>\n</ol>\n</li>\n</ul>\n<h3 id=\"4주차-r3f를-사용한-키보드-애니메이션\" style=\"position:relative;\"><a href=\"#4%EC%A3%BC%EC%B0%A8-r3f%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%9C-%ED%82%A4%EB%B3%B4%EB%93%9C-%EC%95%A0%EB%8B%88%EB%A9%94%EC%9D%B4%EC%85%98\" aria-label=\"4주차 r3f를 사용한 키보드 애니메이션 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4주차: R3F를 사용한 키보드 애니메이션</h3>\n<p><img src=\"/%ED%9A%8C%EA%B3%A0/%5B2024-08-17%5D%EC%9B%B9_%EC%95%A0%EB%8B%88%EB%A9%94%EC%9D%B4%EC%85%98_%EC%8A%A4%ED%84%B0%EB%94%94_%EA%B2%B0%EA%B3%BC%EB%AC%BC_%EB%B0%8F_%ED%9A%8C%EA%B3%A0/3.gif\" alt=\"3.gif\"></p>\n<p>4주차엔 <em>키보드 입력과 물리 기반 애니메이션</em>을 구현했다.</p>\n<p>이때부터 스터디 리더 분이 공유해주신 유데미 R3F 강의를 들었다. 좋은 강의를 공유해주셔서 너무 감사했다. 스터디를 진행하면서 완강했는데 많은 도움이 됐다.</p>\n<ul>\n<li><strong>구현 및 학습 내용</strong>\n<ol>\n<li><strong>키보드 입력 처리</strong>\n<ul>\n<li>R3F의 **<code class=\"language-text\">KeyboardControls</code>*를 사용해 키보드 입력과 오브젝트의 움직임을 매핑했다.</li>\n</ul>\n</li>\n<li><strong>물리 법칙 적용</strong>\n<ul>\n<li><code class=\"language-text\">Physics</code>로 물리 법칙을 적용할 수 있었다. 물리법칙을 구현을 위해 <code class=\"language-text\">@react-three/rapier</code> 를 사용했다.</li>\n<li>나무는 fixed로 바닥에 고정시키고, box는 오브젝트에 의해 충격을 받을 수 있게 했다.</li>\n</ul>\n</li>\n<li>충돌 영역 설정\n<ol>\n<li>이번에는 사용하지 않았지만, <code class=\"language-text\">colliders=\"hull\"</code>라는 충돌 영역을 메쉬 모양에 맞추는 옵션이 있었다. 해당 옵션을 넣고 바퀴 따로 몸체 따로 힘을 다르게 잘 주면 아마 진짜 자전거같은 움직임을 만들 수 있을 것 같다.</li>\n</ol>\n</li>\n<li><strong>이슈:</strong> 자전거가 일정 시간 후 움직이지 않는 이슈가 있었는데 알고보니 RigidBody는 일정 시간이 지나면 잠드는 것(sleep) 같았다. Rigidbody의 canSleep과 applyImpulse의 두번째 인자를 false로 넣어주면 계속 활성상태로 유지할 수가 있어서 해당 방법으로 해결했다.</li>\n</ol>\n</li>\n</ul>\n<h3 id=\"5주차-토스페이스-클론코딩\" style=\"position:relative;\"><a href=\"#5%EC%A3%BC%EC%B0%A8-%ED%86%A0%EC%8A%A4%ED%8E%98%EC%9D%B4%EC%8A%A4-%ED%81%B4%EB%A1%A0%EC%BD%94%EB%94%A9\" aria-label=\"5주차 토스페이스 클론코딩 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5주차: 토스페이스 클론코딩</h3>\n<p><img src=\"/%ED%9A%8C%EA%B3%A0/%5B2024-08-17%5D%EC%9B%B9_%EC%95%A0%EB%8B%88%EB%A9%94%EC%9D%B4%EC%85%98_%EC%8A%A4%ED%84%B0%EB%94%94_%EA%B2%B0%EA%B3%BC%EB%AC%BC_%EB%B0%8F_%ED%9A%8C%EA%B3%A0/4.gif\" alt=\"4.gif\"></p>\n<p>5주차는 <a href=\"https://velog.io/@blcklamb/%ED%86%A0%EC%8A%A4%ED%8E%98%EC%9D%B4%EC%8A%A4%EB%A5%BC-%ED%81%B4%EB%A1%A0%EC%BD%94%EB%94%A9-%ED%95%B4%EB%B3%B4%EC%9E%90\">토스페이스 클론 코딩하는 아티클</a>을 클론코딩 해보는 시간을 가졌다. 로 시작되었다 (좋은 아티클 감사합니다)</p>\n<ul>\n<li><strong>구현 및 학습 내용</strong>\n<ul>\n<li>2d-3d 뷰 전환 기능을 추가 구현했다.\n<ul>\n<li>모델들을 같은 z축에 정렬시키고 카메라의 위치를 마주보게 하면 되지 않을까 싶어서 그렇게 구현했는데, 카메라도 2d 뷰로 전환시킬 방법을 찾아야 할 것 같다. 나중의 과제로 남았다.</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"6-7주차-포트폴리오-사이트-만들기\" style=\"position:relative;\"><a href=\"#6-7%EC%A3%BC%EC%B0%A8-%ED%8F%AC%ED%8A%B8%ED%8F%B4%EB%A6%AC%EC%98%A4-%EC%82%AC%EC%9D%B4%ED%8A%B8-%EB%A7%8C%EB%93%A4%EA%B8%B0\" aria-label=\"6 7주차 포트폴리오 사이트 만들기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>6, 7주차: 포트폴리오 사이트 만들기</h3>\n<p><img src=\"/%ED%9A%8C%EA%B3%A0/%5B2024-08-17%5D%EC%9B%B9_%EC%95%A0%EB%8B%88%EB%A9%94%EC%9D%B4%EC%85%98_%EC%8A%A4%ED%84%B0%EB%94%94_%EA%B2%B0%EA%B3%BC%EB%AC%BC_%EB%B0%8F_%ED%9A%8C%EA%B3%A0/5.gif\" alt=\"5.gif\"></p>\n<p>마지막으로 각자 학습한 애니메이션을 응용하여 프토폴리오 사이트를 만들어보는 과제를 진행했다.</p>\n<p>(내 포트폴리오는 좋은 디자인 아이디어가 떠오르지 않아 미완성 상태로 남았다. 3d도 포기 못했고 좋아하는 네오 브루탈리즘 스타일 2D 디자인도 포기할 수 없었는데 둘을 잘 결합시킨 형태가 떠오르지 않았다 …)</p>\n<ul>\n<li><strong>구현 및 학습 내용</strong>\n<ol>\n<li><strong>마우스 커서 커스터마이징</strong>\n<ol>\n<li>마우스 커서를 숨기고, 마우스 포인터 움직임에 따라 원을 띄워서 구현했다.</li>\n</ol>\n</li>\n<li><strong>clip-path 애니메이션</strong>\n<ol>\n<li>화면 진입 시 2주차 스터디 때 구현했던 clip-path 애니메이션이 트리거되도록 했다.</li>\n</ol>\n</li>\n<li><strong>가로 스크롤 풀 페이지 화면</strong>\n<ol>\n<li>gsap을 사용했다.</li>\n</ol>\n</li>\n<li><strong>3D와 함께 움직이는 2D svg 요소</strong>\n<ol>\n<li><code class=\"language-text\">BBAnchor</code> 컴포넌트로 네오 브루탈리즘에 자주 보이는 도형 svg를 넣어보았다.</li>\n</ol>\n</li>\n<li><strong>이슈:</strong> Next.js의 App Router를 사용할 때 라우트 전환 애니메이션 구현에 문제가 있었다. 관련 <a href=\"https://github.com/vercel/next.js/discussions/42658\">Discussion</a>을 확인했지만 아직 시도해보진 못했다. 추후 과제로 남겨두었다.</li>\n</ol>\n</li>\n</ul>\n<h2 id=\"회고-및-느낀-점\" style=\"position:relative;\"><a href=\"#%ED%9A%8C%EA%B3%A0-%EB%B0%8F-%EB%8A%90%EB%82%80-%EC%A0%90\" aria-label=\"회고 및 느낀 점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>회고 및 느낀 점</h2>\n<ul>\n<li>\n<p>같은 관심사를 가진 사람들끼리 모여서 서로 레퍼런스와 공부한 내용들을 공유하거나 잘 안되는 건 도우면서 개발하니까 재밌었다.</p>\n</li>\n<li>\n<p>다른 우선순위에 밀려 못하던 일을 단기간에 집중하여 공부할 수 있어서 좋았다. 스터디의 장점을 느낄 수 있었던 스터디였다.</p>\n</li>\n<li>\n<p>크리에이티브 코딩, 인터렉션 개발 분야가 너무 매력적인 분야라고 느껴졌다</p>\n</li>\n<li>\n<p><strong>그 후에 해본 것</strong></p>\n<ul>\n<li><img src=\"/%ED%9A%8C%EA%B3%A0/%5B2024-08-17%5D%EC%9B%B9_%EC%95%A0%EB%8B%88%EB%A9%94%EC%9D%B4%EC%85%98_%EC%8A%A4%ED%84%B0%EB%94%94_%EA%B2%B0%EA%B3%BC%EB%AC%BC_%EB%B0%8F_%ED%9A%8C%EA%B3%A0/6.gif\" alt=\"6.gif\"></li>\n<li>옛날에 재밌게 봤던 라온마라는 드라마에서 인상깊게 봤었던 연출 기법인 ‘버티고’를 구현해보고 싶었다. 카메라를 뒤로 빼면서 줌인을 당겼다.</li>\n</ul>\n</li>\n<li>\n<p><strong>앞으로는?</strong></p>\n<ul>\n<li>만화/영상의 연출 기법에 관심이 있는데 하나하나 웹에 구현해보면 재밌을 것 같다. 시간나면 해보고 싶다.</li>\n</ul>\n</li>\n</ul>","tableOfContents":"<ul>\n<li>\n<p><a href=\"#%EA%B0%9C%EC%9A%94\">개요</a></p>\n<ul>\n<li><a href=\"#1%EC%A3%BC%EC%B0%A8-framer-motion%EC%9D%84-%EC%82%AC%EC%9A%A9%ED%95%9C-%EC%8A%A4%ED%81%AC%EB%A1%A4-%EC%95%A0%EB%8B%88%EB%A9%94%EC%9D%B4%EC%85%98\">1주차: framer-motion을 사용한 <strong>스크롤 애니메이션</strong></a></li>\n<li><a href=\"#2%EC%A3%BC%EC%B0%A8-framer-motion-%EB%9D%BC%EC%9A%B0%ED%8A%B8-%EC%A0%84%ED%99%98-%EC%95%A0%EB%8B%88%EB%A9%94%EC%9D%B4%EC%85%98\">2주차: framer-motion <strong>라우트 전환 애니메이션</strong></a></li>\n<li><a href=\"#3%EC%A3%BC%EC%B0%A8-r3f%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%9C-%EC%8A%A4%ED%81%AC%EB%A1%A4-%EC%95%A0%EB%8B%88%EB%A9%94%EC%9D%B4%EC%85%98\">3주차: R3F를 사용한 스크롤 애니메이션</a></li>\n<li><a href=\"#4%EC%A3%BC%EC%B0%A8-r3f%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%9C-%ED%82%A4%EB%B3%B4%EB%93%9C-%EC%95%A0%EB%8B%88%EB%A9%94%EC%9D%B4%EC%85%98\">4주차: R3F를 사용한 키보드 애니메이션</a></li>\n<li><a href=\"#5%EC%A3%BC%EC%B0%A8-%ED%86%A0%EC%8A%A4%ED%8E%98%EC%9D%B4%EC%8A%A4-%ED%81%B4%EB%A1%A0%EC%BD%94%EB%94%A9\">5주차: 토스페이스 클론코딩</a></li>\n<li><a href=\"#6-7%EC%A3%BC%EC%B0%A8-%ED%8F%AC%ED%8A%B8%ED%8F%B4%EB%A6%AC%EC%98%A4-%EC%82%AC%EC%9D%B4%ED%8A%B8-%EB%A7%8C%EB%93%A4%EA%B8%B0\">6, 7주차: 포트폴리오 사이트 만들기</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%ED%9A%8C%EA%B3%A0-%EB%B0%8F-%EB%8A%90%EB%82%80-%EC%A0%90\">회고 및 느낀 점</a></p>\n</li>\n</ul>","frontmatter":{"title":"웹 애니메이션 스터디 결과물 및 회고","date":"2024.08.17","description":"약 두달 간 진행한 웹 애니메이션 스터디를 통해 배운 점 등을 정리한다.","category":"회고","tag":["framer-motion","스터디","회고록"]}},"previous":{"fields":{"slug":"/컨퍼런스/[2024-08-10]2년_연속_다녀온_인프콘_2024_후기/"},"frontmatter":{"title":"2년 연속 다녀온 인프콘 2024 후기"}},"next":{"fields":{"slug":"/기타/[2024-08-18] AWS SAA-C03 취득한 후기/"},"frontmatter":{"title":"AWS SAA-C03 취득한 후기"}}},"pageContext":{"id":"8025daa4-76c9-5519-962e-eb5e198f16a6","previousPostId":"1741cfde-523a-5e67-b938-339a7c27963c","nextPostId":"9fab33c5-5538-5b39-afad-4079fce6c6b7"}},"staticQueryHashes":["2841359383"],"slicesMap":{}}